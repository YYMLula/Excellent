{"version":3,"file":"js/192.6b4a0263.js","mappings":"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","sources":["webpack://vuehome/./src/components/WorldEr.vue","webpack://vuehome/../src/defaults.js","webpack://vuehome/../src/initializer.js","webpack://vuehome/../src/html-parser.js","webpack://vuehome/../src/typed.js","webpack://vuehome/./src/components/WorldEr.vue?2542"],"sourcesContent":["<template>\r\n <!-- 轮播图 -->\r\n\t\t<div class=\"slider\" >\r\n    <transition-group name=\"fade\" tag=\"div\" class=\"slider__container\" :css=\"false\">\r\n    <div v-for=\"(image, index) in images\" :key=\"index\" class=\"slider__item\" :style=\"{ backgroundImage: 'url(' + image + ')' }\" v-show=\"currentIndex === index\"\r\n></div>\r\n\t</transition-group>\r\n  </div>\t\r\n\t<p class=\"p1\">\r\n\t世界很暗，但是你来了\r\n</p>\r\n\r\n<!-- 动态字 -->\r\n<div class=\"description center-align\">\r\n\t<span id=\"subtitle\"></span>\r\n    <!-- <span class=\"typed-cursor\" aria-hidden=\"true\">|</span> -->\r\n  </div>\r\n\t<!-- <script src=\"https://cdn.jsdelivr.net/npm/typed.js@2.0.11/lib/typed.min.js\"></script> -->\r\n\r\n<p class=\"p2\"><a href=\"../home\">开始阅读</a></p>\r\n</template>\r\n<style>\r\n* {\r\nmargin: 0;\r\npadding: 0;\r\n}\r\n\r\n\r\n\r\na {\r\ncolor: white;\r\ntext-decoration: none;\r\n}\r\n\r\n.head {\r\n/* 宽度占满 */\r\nwidth: 100%;\r\nheight: 80px;\r\nbackground-color: #41454D;\r\n/* 透明度 */\r\nopacity: 0.7;\r\n}\r\n\r\n.headin {\r\nwidth: 80%;\r\nmargin: auto;\r\n/* flex布局 */\r\ndisplay: flex;\r\n/* 水平居中 */\r\njustify-content: space-between;\r\nline-height: 80px;\r\ncolor: white;\r\n}\r\n\r\n.headl {\r\nfont-size: 28px;\r\n}\r\n\r\n.headr {\r\nwidth: 300px;\r\ndisplay: flex;\r\njustify-content: space-between;\r\nfont-family: youyuan;\r\n}\r\n\r\n.headr img {\r\nwidth: 20px;\r\nheight: 20px;\r\nfloat: left;\r\nmargin-top: 30px;\r\n}\r\n\r\n.p1 {\r\n\tmargin-top: 200px; /* 设置元素距离页面顶部200px */\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n    font-family: youyuan;\r\n    line-height: 100%;\r\n    padding: 10px;\r\n    width: auto;\r\n    height: auto;\r\n    margin-bottom: auto;\r\n}\r\n\r\n.p2 {\r\ntext-align: center;\r\n/* 边框1px */\r\nborder: 1px solid white;\r\nfont-size: 20px;\r\nwidth: 180px;\r\nline-height: 60px;\r\nborder-radius: 30px;\r\nmargin: auto;\r\n}\r\n.slider {\r\nposition: fixed;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nz-index: -1;\r\n}\r\n\r\n.slider__container {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\n}\r\n\r\n.slider__item {\r\nposition: absolute;\r\ntop: 0;\r\nleft: 0;\r\nwidth: 100%;\r\nheight: 100%;\r\nbackground-size: cover;\r\nbackground-position: center;\r\n\r\ntransition: opacity 1s ease-in-out;\r\n}\r\n\r\n.fade-enter-active,\r\n.fade-leave-active {\r\ntransition: opacity 1s ease-in-out;\r\n}\r\n\r\n.fade-enter,\r\n.fade-leave-to {\r\nopacity: 0;\r\n}\r\n/* .description {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh; \r\n  color: #ffffff; \r\n} */\r\n.center-align {\r\n\tdisplay: flex;\r\n  justify-content: center;\r\n  height: 100px; \r\n  /* align-items: center; */\r\n  color: #ffffff;\r\n}\r\n*{\r\n  cursor:url(\"../assets/img/Arrow.cur\"),auto!important\r\n}\r\n</style>\r\n\r\n<script>\r\nimport Typed from 'typed.js';//动态字\r\n// import { rainbowCursor } from \"cursor-effects\";\r\n// new rainbowCursor;\r\n\r\nexport default {\r\ndata() {\r\nreturn {\r\nimages: [\r\nrequire('../assets/img/background1.png'),\r\nrequire('../assets/img/background2.jpg'),\r\nrequire('../assets/img/background3.jpg')\r\n],\r\ncurrentIndex: 0,\r\nintervalId: null,\r\n}\r\n},\r\nmounted() {\r\n\t// this.checkScreenWidthAndLoadScript();\r\nthis.startSlider()//轮转图\r\nthis.initTypedJs();//动态字\r\nsetTimeout(() => {\r\n      this.$refs.buryit && this.$refs.buryit.removeAttribute(\"onclick\");\r\n    }, 2000);\r\n},\r\nmethods: {\r\n\t// checkScreenWidthAndLoadScript() {\r\n    //   const windowWidth = window.innerWidth;\r\n    //   if (windowWidth > 768) {\r\n    //     // 동적으로 스크립트를 추가합니다.\r\n    //     const script = document.createElement('script');\r\n    //     script.type = 'text/javascript';\r\n    //     script.src = '/libs/others/star.js';\r\n    //     document.body.appendChild(script);\r\n    //   }\r\n    // },\r\n\tinitTypedJs() {//动态字\r\n      new Typed('#subtitle', {\r\n        strings: [\r\n          '我们要做的是鼓励孩子的内在动机，有技巧地表扬，不去表扬天分或才智。对孩子积极投入的过程进行表扬，如他们的努力与策略，他们的专注、坚持与进步。其中最重要的一条就是，要赞美孩子的努力、策略和选择而非天赋。',\r\n          '对某个信念倔强的坚持可能会困住你，对痛苦自恋式的沉溺会困住你，反反复复的苦痛和无助会困住你，最后是你心里那个无形的笼子把你锁住了',\r\n          '远离笼子，跳出来，不要把自己变得无助，那些美好的向往是为了把你变得美好，你的向往很重要，你的梦想很重要，但都比不上你变得更好。', // 원하는 콘텐츠를 포함한 여러 문자열을 첨부할 수 있습니다\r\n        ],\r\n        typeSpeed: 70, // 캐릭터 입력 속도 조절输入速度调节\r\n        backSpeed: 50, // 입력 해제 속도 조절调整解除输入速度\r\n        loop: true, // 계속 반복할지 여부是否要重复\r\n      });\r\n    },\r\n  \r\nstartSlider() {//轮转图\r\nthis.intervalId = setInterval(() => {\r\nthis.currentIndex = (this.currentIndex + 1) % this.images.length\r\n}, 5000)\r\n},\r\n\r\n\r\n  \r\n\r\n\r\n}\r\n}\r\n</script>\r\n\r\n\r\n\r\n\r\n<!-- <template>\r\n\t<div class=\"carousel-wrapper\">\r\n\t\r\n\t<div class=\"carousel-content\">\r\n\t\t\r\n\t<el-carousel height=\"640px\" interval=\"3000\">\r\n\t\t<p class=\"p1\">\r\n\t\t\t世界很暗，但是你来了\r\n\t\t</p>13\r\n    <el-carousel-item v-for=\"(item, index) in images\" :key=\"index\">\r\n    <img :src=\"item\" :alt=\"'images' + (index + 1)\"/>\r\n    </el-carousel-item>\r\n  </el-carousel>\r\n\t</div>\r\n</div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n\tdata() {\r\n\treturn {\r\n\t\timages: [\r\n\t\trequire('@/assets/img/background1.png'),\r\n        require('@/assets/img/background2.jpg'),\r\n        require('@/assets/img/background3.jpg')\r\n\t\t],\r\n\t\t\t};\r\n\t},\r\n  };\r\n  </script>\r\n\r\n  <style scoped>\r\n \r\n\r\n.carousel-content {\r\n  flex-grow: 1;\r\n}\r\n  .el-carousel__item h3 {\r\n\tcolor: #475669;\r\n\topacity: 0.75;\r\n\tline-height: 150px;\r\n\tmargin: 0;\r\n\ttext-align: center;\r\n  }\r\n  \r\n  .el-carousel__item:nth-child(2n) {\r\n\tbackground-color: #99a9bf;\r\n  }\r\n  \r\n  .el-carousel__item:nth-child(2n + 1) {\r\n\tbackground-color: #d3dce6;\r\n  }\r\n  </style> -->\r\n  \r\n\r\n<!-- <style>\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\nbody {\r\n\tbackground: url(../components/img/background1.png);\r\n\t/* 背景图完全覆盖界面 */\r\n\tbackground-size: cover;\r\n}\r\n\r\na {\r\n\tcolor: white;\r\n\ttext-decoration: none;\r\n}\r\n\r\n.head {\r\n\t/* 宽度占满 */\r\n\twidth: 100%;\r\n\theight: 80px;\r\n\tbackground-color: #41454D;\r\n\t/* 透明度 */\r\n\topacity: 0.7;\r\n}\r\n\r\n.headin {\r\n\twidth: 80%;\r\n\tmargin: auto;\r\n\t/* flex布局 */\r\n\tdisplay: flex;\r\n\t/* 水平居中 */\r\n\tjustify-content: space-between;\r\n\tline-height: 80px;\r\n\tcolor: white;\r\n}\r\n\r\n.headl {\r\n\tfont-size: 28px;\r\n}\r\n\r\n.headr {\r\n\twidth: 300px;\r\n\tdisplay: flex;\r\n\tjustify-content: space-between;\r\n\tfont-family: youyuan;\r\n}\r\n\r\n.headr img {\r\n\twidth: 20px;\r\n\theight: 20px;\r\n\tfloat: left;\r\n\tmargin-top: 30px;\r\n}\r\n\r\n.p1 {\r\n\tcolor: white;\r\n\tfont-size: 60px;\r\n\ttext-align: center;\r\n\tline-height: 500px;\r\n\tfont-family: youyuan;\r\n}\r\n\r\n.p2 {\r\n\ttext-align: center;\r\n\t/* 边框1px */\r\n\tborder: 1px solid white;\r\n\tfont-size: 20px;\r\n\twidth: 180px;\r\n\tline-height: 60px;\r\n\tborder-radius: 30px;\r\n\tmargin: auto;\r\n}\r\n.slider {\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tz-index: -1;\r\n\t}\r\n\r\n\t.slider__container {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\t}\r\n\r\n\t.slider__item {\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n\topacity: 0;\r\n\ttransition: opacity 1s ease-in-out;\r\n\t}\r\n\r\n\t.fade-enter-active,\r\n\t.fade-leave-active {\r\n\ttransition: opacity 1s ease-in-out;\r\n\t}\r\n\r\n\t.fade-enter,\r\n\t.fade-leave-to {\r\n\topacity: 0;\r\n\t}\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      images: [\r\n        '../assets/img/background1.jpg',\r\n        '../assets/img/background2.jpg',\r\n        '../assets/img/background3.jpg'\r\n      ],\r\n      currentIndex: 0,\r\n      intervalId: null\r\n    }\r\n  },\r\n  mounted() {\r\n    this.startSlider()\r\n  },\r\n  methods: {\r\n    startSlider() {\r\n      this.intervalId = setInterval(() => {\r\n        this.currentIndex = (this.currentIndex + 1) % this.images.length\r\n      }, 1000)\r\n    }\r\n  }\r\n}\r\n</script> -->","/**\n * Defaults & options\n * @returns {object} Typed defaults & options\n * @public\n */\n\nconst defaults = {\n  /**\n   * @property {array} strings strings to be typed\n   * @property {string} stringsElement ID of element containing string children\n   */\n  strings: [\n    'These are the default values...',\n    'You know what you should do?',\n    'Use your own!',\n    'Have a great day!',\n  ],\n  stringsElement: null,\n\n  /**\n   * @property {number} typeSpeed type speed in milliseconds\n   */\n  typeSpeed: 0,\n\n  /**\n   * @property {number} startDelay time before typing starts in milliseconds\n   */\n  startDelay: 0,\n\n  /**\n   * @property {number} backSpeed backspacing speed in milliseconds\n   */\n  backSpeed: 0,\n\n  /**\n   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n   */\n  smartBackspace: true,\n\n  /**\n   * @property {boolean} shuffle shuffle the strings\n   */\n  shuffle: false,\n\n  /**\n   * @property {number} backDelay time before backspacing in milliseconds\n   */\n  backDelay: 700,\n\n  /**\n   * @property {boolean} fadeOut Fade out instead of backspace\n   * @property {string} fadeOutClass css class for fade animation\n   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n   */\n  fadeOut: false,\n  fadeOutClass: 'typed-fade-out',\n  fadeOutDelay: 500,\n\n  /**\n   * @property {boolean} loop loop strings\n   * @property {number} loopCount amount of loops\n   */\n  loop: false,\n  loopCount: Infinity,\n\n  /**\n   * @property {boolean} showCursor show cursor\n   * @property {string} cursorChar character for cursor\n   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n   */\n  showCursor: true,\n  cursorChar: '|',\n  autoInsertCss: true,\n\n  /**\n   * @property {string} attr attribute for typing\n   * Ex: input placeholder, value, or just HTML text\n   */\n  attr: null,\n\n  /**\n   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n   */\n  bindInputFocusEvents: false,\n\n  /**\n   * @property {string} contentType 'html' or 'null' for plaintext\n   */\n  contentType: 'html',\n\n  /**\n   * Before it begins typing\n   * @param {Typed} self\n   */\n  onBegin: (self) => {},\n\n  /**\n   * All typing is complete\n   * @param {Typed} self\n   */\n  onComplete: (self) => {},\n\n  /**\n   * Before each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  preStringTyped: (arrayPos, self) => {},\n\n  /**\n   * After each string is typed\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStringTyped: (arrayPos, self) => {},\n\n  /**\n   * During looping, after last string is typed\n   * @param {Typed} self\n   */\n  onLastStringBackspaced: (self) => {},\n\n  /**\n   * Typing has been stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingPaused: (arrayPos, self) => {},\n\n  /**\n   * Typing has been started after being stopped\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onTypingResumed: (arrayPos, self) => {},\n\n  /**\n   * After reset\n   * @param {Typed} self\n   */\n  onReset: (self) => {},\n\n  /**\n   * After stop\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStop: (arrayPos, self) => {},\n\n  /**\n   * After start\n   * @param {number} arrayPos\n   * @param {Typed} self\n   */\n  onStart: (arrayPos, self) => {},\n\n  /**\n   * After destroy\n   * @param {Typed} self\n   */\n  onDestroy: (self) => {},\n};\n\nexport default defaults;\n","import defaults from './defaults.js';\n/**\n * Initialize the Typed object\n */\n\nexport default class Initializer {\n  /**\n   * Load up defaults & options on the Typed instance\n   * @param {Typed} self instance of Typed\n   * @param {object} options options object\n   * @param {string} elementId HTML element ID _OR_ instance of HTML element\n   * @private\n   */\n\n  load(self, options, elementId) {\n    // chosen element to manipulate text\n    if (typeof elementId === 'string') {\n      self.el = document.querySelector(elementId);\n    } else {\n      self.el = elementId;\n    }\n\n    self.options = { ...defaults, ...options };\n\n    // attribute to type into\n    self.isInput = self.el.tagName.toLowerCase() === 'input';\n    self.attr = self.options.attr;\n    self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\n    // show cursor\n    self.showCursor = self.isInput ? false : self.options.showCursor;\n\n    // custom cursor\n    self.cursorChar = self.options.cursorChar;\n\n    // Is the cursor blinking\n    self.cursorBlinking = true;\n\n    // text content of element\n    self.elContent = self.attr\n      ? self.el.getAttribute(self.attr)\n      : self.el.textContent;\n\n    // html or plain text\n    self.contentType = self.options.contentType;\n\n    // typing speed\n    self.typeSpeed = self.options.typeSpeed;\n\n    // add a delay before typing starts\n    self.startDelay = self.options.startDelay;\n\n    // backspacing speed\n    self.backSpeed = self.options.backSpeed;\n\n    // only backspace what doesn't match the previous string\n    self.smartBackspace = self.options.smartBackspace;\n\n    // amount of time to wait before backspacing\n    self.backDelay = self.options.backDelay;\n\n    // Fade out instead of backspace\n    self.fadeOut = self.options.fadeOut;\n    self.fadeOutClass = self.options.fadeOutClass;\n    self.fadeOutDelay = self.options.fadeOutDelay;\n\n    // variable to check whether typing is currently paused\n    self.isPaused = false;\n\n    // input strings of text\n    self.strings = self.options.strings.map((s) => s.trim());\n\n    // div containing strings\n    if (typeof self.options.stringsElement === 'string') {\n      self.stringsElement = document.querySelector(self.options.stringsElement);\n    } else {\n      self.stringsElement = self.options.stringsElement;\n    }\n\n    if (self.stringsElement) {\n      self.strings = [];\n      self.stringsElement.style.cssText =\n        'clip: rect(0 0 0 0);clip-path:inset(50%);height:1px;overflow:hidden;position:absolute;white-space:nowrap;width:1px;';\n\n      const strings = Array.prototype.slice.apply(self.stringsElement.children);\n      const stringsLength = strings.length;\n\n      if (stringsLength) {\n        for (let i = 0; i < stringsLength; i += 1) {\n          const stringEl = strings[i];\n          self.strings.push(stringEl.innerHTML.trim());\n        }\n      }\n    }\n\n    // character number position of current string\n    self.strPos = 0;\n\n    // If there is some text in the element\n    self.currentElContent = this.getCurrentElContent(self);\n\n    if (self.currentElContent && self.currentElContent.length > 0) {\n      self.strPos = self.currentElContent.length - 1;\n      self.strings.unshift(self.currentElContent);\n    }\n\n    // the order of strings\n    self.sequence = [];\n\n    // Set the order in which the strings are typed\n    for (let i in self.strings) {\n      self.sequence[i] = i;\n    }\n\n    // current array position\n    self.arrayPos = 0;\n\n    // index of string to stop backspacing on\n    self.stopNum = 0;\n\n    // Looping logic\n    self.loop = self.options.loop;\n    self.loopCount = self.options.loopCount;\n    self.curLoop = 0;\n\n    // shuffle the strings\n    self.shuffle = self.options.shuffle;\n\n    self.pause = {\n      status: false,\n      typewrite: true,\n      curString: '',\n      curStrPos: 0,\n    };\n\n    // When the typing is complete (when not looped)\n    self.typingComplete = false;\n\n    self.autoInsertCss = self.options.autoInsertCss;\n\n    if (self.autoInsertCss) {\n      this.appendCursorAnimationCss(self);\n      this.appendFadeOutAnimationCss(self);\n    }\n  }\n\n  getCurrentElContent(self) {\n    let elContent = '';\n    if (self.attr) {\n      elContent = self.el.getAttribute(self.attr);\n    } else if (self.isInput) {\n      elContent = self.el.value;\n    } else if (self.contentType === 'html') {\n      elContent = self.el.innerHTML;\n    } else {\n      elContent = self.el.textContent;\n    }\n    return elContent;\n  }\n\n  appendCursorAnimationCss(self) {\n    const cssDataName = 'data-typed-js-cursor-css';\n\n    if (!self.showCursor || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-cursor{\n          opacity: 1;\n        }\n        .typed-cursor.typed-cursor--blink{\n          animation: typedjsBlink 0.7s infinite;\n          -webkit-animation: typedjsBlink 0.7s infinite;\n                  animation: typedjsBlink 0.7s infinite;\n        }\n        @keyframes typedjsBlink{\n          50% { opacity: 0.0; }\n        }\n        @-webkit-keyframes typedjsBlink{\n          0% { opacity: 1; }\n          50% { opacity: 0.0; }\n          100% { opacity: 1; }\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n\n  appendFadeOutAnimationCss(self) {\n    const cssDataName = 'data-typed-fadeout-js-css';\n\n    if (!self.fadeOut || document.querySelector(`[${cssDataName}]`)) {\n      return;\n    }\n\n    let css = document.createElement('style');\n    css.setAttribute(cssDataName, 'true');\n\n    css.innerHTML = `\n        .typed-fade-out{\n          opacity: 0;\n          transition: opacity .25s;\n        }\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\n          -webkit-animation: 0;\n          animation: 0;\n        }\n      `;\n\n    document.body.appendChild(css);\n  }\n}\n\nexport let initializer = new Initializer();\n","/**\n * TODO: These methods can probably be combined somehow\n * Parse HTML tags & HTML Characters\n */\n\nexport default class HTMLParser {\n  /**\n   * Type HTML tags & HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n\n  typeHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '<' || curChar === '&') {\n      let endTag = '';\n      if (curChar === '<') {\n        endTag = '>';\n      } else {\n        endTag = ';';\n      }\n      while (curString.substring(curStrPos + 1).charAt(0) !== endTag) {\n        curStrPos++;\n        if (curStrPos + 1 > curString.length) {\n          break;\n        }\n      }\n      curStrPos++;\n    }\n    return curStrPos;\n  }\n\n  /**\n   * Backspace HTML tags and HTML Characters\n   * @param {string} curString Current string\n   * @param {number} curStrPos Position in current string\n   * @param {Typed} self instance of Typed\n   * @returns {number} a new string position\n   * @private\n   */\n  backSpaceHtmlChars(curString, curStrPos, self) {\n    if (self.contentType !== 'html') return curStrPos;\n    const curChar = curString.substring(curStrPos).charAt(0);\n    if (curChar === '>' || curChar === ';') {\n      let endTag = '';\n      if (curChar === '>') {\n        endTag = '<';\n      } else {\n        endTag = '&';\n      }\n      while (curString.substring(curStrPos - 1).charAt(0) !== endTag) {\n        curStrPos--;\n        if (curStrPos < 0) {\n          break;\n        }\n      }\n      curStrPos--;\n    }\n    return curStrPos;\n  }\n}\n\nexport let htmlParser = new HTMLParser();\n","import { initializer } from './initializer.js';\nimport { htmlParser } from './html-parser.js';\n\n/**\n * Welcome to Typed.js!\n * @param {string} elementId HTML element ID _OR_ HTML element\n * @param {object} options options object\n * @returns {object} a new Typed object\n */\nexport default class Typed {\n  constructor(elementId, options) {\n    // Initialize it up\n    initializer.load(this, options, elementId);\n    // All systems go!\n    this.begin();\n  }\n\n  /**\n   * Toggle start() and stop() of the Typed instance\n   * @public\n   */\n  toggle() {\n    this.pause.status ? this.start() : this.stop();\n  }\n\n  /**\n   * Stop typing / backspacing and enable cursor blinking\n   * @public\n   */\n  stop() {\n    if (this.typingComplete) return;\n    if (this.pause.status) return;\n    this.toggleBlinking(true);\n    this.pause.status = true;\n    this.options.onStop(this.arrayPos, this);\n  }\n\n  /**\n   * Start typing / backspacing after being stopped\n   * @public\n   */\n  start() {\n    if (this.typingComplete) return;\n    if (!this.pause.status) return;\n    this.pause.status = false;\n    if (this.pause.typewrite) {\n      this.typewrite(this.pause.curString, this.pause.curStrPos);\n    } else {\n      this.backspace(this.pause.curString, this.pause.curStrPos);\n    }\n    this.options.onStart(this.arrayPos, this);\n  }\n\n  /**\n   * Destroy this instance of Typed\n   * @public\n   */\n  destroy() {\n    this.reset(false);\n    this.options.onDestroy(this);\n  }\n\n  /**\n   * Reset Typed and optionally restarts\n   * @param {boolean} restart\n   * @public\n   */\n  reset(restart = true) {\n    clearInterval(this.timeout);\n    this.replaceText('');\n    if (this.cursor && this.cursor.parentNode) {\n      this.cursor.parentNode.removeChild(this.cursor);\n      this.cursor = null;\n    }\n    this.strPos = 0;\n    this.arrayPos = 0;\n    this.curLoop = 0;\n    if (restart) {\n      this.insertCursor();\n      this.options.onReset(this);\n      this.begin();\n    }\n  }\n\n  /**\n   * Begins the typing animation\n   * @private\n   */\n  begin() {\n    this.options.onBegin(this);\n    this.typingComplete = false;\n    this.shuffleStringsIfNeeded(this);\n    this.insertCursor();\n    if (this.bindInputFocusEvents) this.bindFocusEvents();\n    this.timeout = setTimeout(() => {\n      // If the strPos is 0, we're starting from the beginning of a string\n      // else, we're starting with a previous string that needs to be backspaced first\n      if (this.strPos === 0) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      } else {\n        this.backspace(this.strings[this.sequence[this.arrayPos]], this.strPos);\n      }\n    }, this.startDelay);\n  }\n\n  /**\n   * Called for each character typed\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  typewrite(curString, curStrPos) {\n    if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n      this.el.classList.remove(this.fadeOutClass);\n      if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n    }\n\n    const humanize = this.humanizer(this.typeSpeed);\n    let numChars = 1;\n\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, true);\n      return;\n    }\n\n    // contain typing function in a timeout humanize'd delay\n    this.timeout = setTimeout(() => {\n      // skip over any HTML chars\n      curStrPos = htmlParser.typeHtmlChars(curString, curStrPos, this);\n\n      let pauseTime = 0;\n      let substr = curString.substring(curStrPos);\n      // check for an escape character before a pause value\n      // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n      // single ^ are removed from string\n      if (substr.charAt(0) === '^') {\n        if (/^\\^\\d+/.test(substr)) {\n          let skip = 1; // skip at least 1\n          substr = /\\d+/.exec(substr)[0];\n          skip += substr.length;\n          pauseTime = parseInt(substr);\n          this.temporaryPause = true;\n          this.options.onTypingPaused(this.arrayPos, this);\n          // strip out the escape character and pause value so they're not printed\n          curString =\n            curString.substring(0, curStrPos) +\n            curString.substring(curStrPos + skip);\n          this.toggleBlinking(true);\n        }\n      }\n\n      // check for skip characters formatted as\n      // \"this is a `string to print NOW` ...\"\n      if (substr.charAt(0) === '`') {\n        while (curString.substring(curStrPos + numChars).charAt(0) !== '`') {\n          numChars++;\n          if (curStrPos + numChars > curString.length) break;\n        }\n        // strip out the escape characters and append all the string in between\n        const stringBeforeSkip = curString.substring(0, curStrPos);\n        const stringSkipped = curString.substring(\n          stringBeforeSkip.length + 1,\n          curStrPos + numChars\n        );\n        const stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n        curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n        numChars--;\n      }\n\n      // timeout for any pause after a character\n      this.timeout = setTimeout(() => {\n        // Accounts for blinking while paused\n        this.toggleBlinking(false);\n\n        // We're done with this sentence!\n        if (curStrPos >= curString.length) {\n          this.doneTyping(curString, curStrPos);\n        } else {\n          this.keepTyping(curString, curStrPos, numChars);\n        }\n        // end of character pause\n        if (this.temporaryPause) {\n          this.temporaryPause = false;\n          this.options.onTypingResumed(this.arrayPos, this);\n        }\n      }, pauseTime);\n\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Continue to the next string & begin typing\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  keepTyping(curString, curStrPos, numChars) {\n    // call before functions if applicable\n    if (curStrPos === 0) {\n      this.toggleBlinking(false);\n      this.options.preStringTyped(this.arrayPos, this);\n    }\n    // start typing each new char into existing string\n    // curString: arg, this.el.html: original text inside element\n    curStrPos += numChars;\n    const nextString = curString.substring(0, curStrPos);\n    this.replaceText(nextString);\n    // loop the function\n    this.typewrite(curString, curStrPos);\n  }\n\n  /**\n   * We're done typing the current string\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  doneTyping(curString, curStrPos) {\n    // fires callback function\n    this.options.onStringTyped(this.arrayPos, this);\n    this.toggleBlinking(true);\n    // is this the final string\n    if (this.arrayPos === this.strings.length - 1) {\n      // callback that occurs on the last typed string\n      this.complete();\n      // quit if we wont loop back\n      if (this.loop === false || this.curLoop === this.loopCount) {\n        return;\n      }\n    }\n    this.timeout = setTimeout(() => {\n      this.backspace(curString, curStrPos);\n    }, this.backDelay);\n  }\n\n  /**\n   * Backspaces 1 character at a time\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @private\n   */\n  backspace(curString, curStrPos) {\n    if (this.pause.status === true) {\n      this.setPauseStatus(curString, curStrPos, false);\n      return;\n    }\n    if (this.fadeOut) return this.initFadeOut();\n\n    this.toggleBlinking(false);\n    const humanize = this.humanizer(this.backSpeed);\n\n    this.timeout = setTimeout(() => {\n      curStrPos = htmlParser.backSpaceHtmlChars(curString, curStrPos, this);\n      // replace text with base text + typed characters\n      const curStringAtPosition = curString.substring(0, curStrPos);\n      this.replaceText(curStringAtPosition);\n\n      // if smartBack is enabled\n      if (this.smartBackspace) {\n        // the remaining part of the current string is equal of the same part of the new string\n        let nextString = this.strings[this.arrayPos + 1];\n        if (\n          nextString &&\n          curStringAtPosition === nextString.substring(0, curStrPos)\n        ) {\n          this.stopNum = curStrPos;\n        } else {\n          this.stopNum = 0;\n        }\n      }\n\n      // if the number (id of character in current string) is\n      // less than the stop number, keep going\n      if (curStrPos > this.stopNum) {\n        // subtract characters one by one\n        curStrPos--;\n        // loop the function\n        this.backspace(curString, curStrPos);\n      } else if (curStrPos <= this.stopNum) {\n        // if the stop number has been reached, increase\n        // array position to next string\n        this.arrayPos++;\n        // When looping, begin at the beginning after backspace complete\n        if (this.arrayPos === this.strings.length) {\n          this.arrayPos = 0;\n          this.options.onLastStringBackspaced();\n          this.shuffleStringsIfNeeded();\n          this.begin();\n        } else {\n          this.typewrite(this.strings[this.sequence[this.arrayPos]], curStrPos);\n        }\n      }\n      // humanized value for typing\n    }, humanize);\n  }\n\n  /**\n   * Full animation is complete\n   * @private\n   */\n  complete() {\n    this.options.onComplete(this);\n    if (this.loop) {\n      this.curLoop++;\n    } else {\n      this.typingComplete = true;\n    }\n  }\n\n  /**\n   * Has the typing been stopped\n   * @param {string} curString the current string in the strings array\n   * @param {number} curStrPos the current position in the curString\n   * @param {boolean} isTyping\n   * @private\n   */\n  setPauseStatus(curString, curStrPos, isTyping) {\n    this.pause.typewrite = isTyping;\n    this.pause.curString = curString;\n    this.pause.curStrPos = curStrPos;\n  }\n\n  /**\n   * Toggle the blinking cursor\n   * @param {boolean} isBlinking\n   * @private\n   */\n  toggleBlinking(isBlinking) {\n    if (!this.cursor) return;\n    // if in paused state, don't toggle blinking a 2nd time\n    if (this.pause.status) return;\n    if (this.cursorBlinking === isBlinking) return;\n    this.cursorBlinking = isBlinking;\n    if (isBlinking) {\n      this.cursor.classList.add('typed-cursor--blink');\n    } else {\n      this.cursor.classList.remove('typed-cursor--blink');\n    }\n  }\n\n  /**\n   * Speed in MS to type\n   * @param {number} speed\n   * @private\n   */\n  humanizer(speed) {\n    return Math.round((Math.random() * speed) / 2) + speed;\n  }\n\n  /**\n   * Shuffle the sequence of the strings array\n   * @private\n   */\n  shuffleStringsIfNeeded() {\n    if (!this.shuffle) return;\n    this.sequence = this.sequence.sort(() => Math.random() - 0.5);\n  }\n\n  /**\n   * Adds a CSS class to fade out current string\n   * @private\n   */\n  initFadeOut() {\n    this.el.className += ` ${this.fadeOutClass}`;\n    if (this.cursor) this.cursor.className += ` ${this.fadeOutClass}`;\n    return setTimeout(() => {\n      this.arrayPos++;\n      this.replaceText('');\n\n      // Resets current string if end of loop reached\n      if (this.strings.length > this.arrayPos) {\n        this.typewrite(this.strings[this.sequence[this.arrayPos]], 0);\n      } else {\n        this.typewrite(this.strings[0], 0);\n        this.arrayPos = 0;\n      }\n    }, this.fadeOutDelay);\n  }\n\n  /**\n   * Replaces current text in the HTML element\n   * depending on element type\n   * @param {string} str\n   * @private\n   */\n  replaceText(str) {\n    if (this.attr) {\n      this.el.setAttribute(this.attr, str);\n    } else {\n      if (this.isInput) {\n        this.el.value = str;\n      } else if (this.contentType === 'html') {\n        this.el.innerHTML = str;\n      } else {\n        this.el.textContent = str;\n      }\n    }\n  }\n\n  /**\n   * If using input elements, bind focus in order to\n   * start and stop the animation\n   * @private\n   */\n  bindFocusEvents() {\n    if (!this.isInput) return;\n    this.el.addEventListener('focus', (e) => {\n      this.stop();\n    });\n    this.el.addEventListener('blur', (e) => {\n      if (this.el.value && this.el.value.length !== 0) {\n        return;\n      }\n      this.start();\n    });\n  }\n\n  /**\n   * On init, insert the cursor element\n   * @private\n   */\n  insertCursor() {\n    if (!this.showCursor) return;\n    if (this.cursor) return;\n    this.cursor = document.createElement('span');\n    this.cursor.className = 'typed-cursor';\n    this.cursor.setAttribute('aria-hidden', true);\n    this.cursor.innerHTML = this.cursorChar;\n    this.el.parentNode &&\n      this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n  }\n}\n","import { render } from \"./WorldEr.vue?vue&type=template&id=1289f00d\"\nimport script from \"./WorldEr.vue?vue&type=script&lang=js\"\nexport * from \"./WorldEr.vue?vue&type=script&lang=js\"\n\nimport \"./WorldEr.vue?vue&type=style&index=0&id=1289f00d&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_1","_createVNode","_TransitionGroup","name","tag","css","_createElementBlock","_Fragment","_renderList","$data","images","image","index","key","style","_normalizeStyle","backgroundImage","currentIndex","_hoisted_2","s","strings","stringsElement","typeSpeed","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","Infinity","showCursor","cursorChar","autoInsertCss","attr","bindInputFocusEvents","contentType","onBegin","t","onComplete","preStringTyped","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","e","n","prototype","load","i","el","document","querySelector","options","isInput","tagName","toLowerCase","cursorBlinking","elContent","getAttribute","textContent","isPaused","map","trim","cssText","r","Array","slice","apply","children","o","length","a","push","innerHTML","u","strPos","currentElContent","this","getCurrentElContent","unshift","sequence","arrayPos","stopNum","curLoop","pause","status","typewrite","curString","curStrPos","typingComplete","appendCursorAnimationCss","appendFadeOutAnimationCss","value","createElement","setAttribute","body","appendChild","typeHtmlChars","substring","charAt","backSpaceHtmlChars","begin","toggle","start","stop","toggleBlinking","backspace","destroy","reset","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","insertCursor","shuffleStringsIfNeeded","bindFocusEvents","setTimeout","classList","contains","remove","humanizer","test","exec","parseInt","temporaryPause","p","c","doneTyping","keepTyping","setPauseStatus","complete","initFadeOut","add","Math","round","random","sort","className","addEventListener","insertBefore","nextSibling","data","require","intervalId","mounted","startSlider","initTypedJs","$refs","buryit","removeAttribute","methods","Typed","setInterval","__exports__","render"],"sourceRoot":""}