{"version":3,"file":"js/588.9601e782.js","mappings":"oMAGA,MAAMA,EAAMC,EAAAA,EAAMC,OAAO,CACxBC,QAAQ,wBACRC,QAAS,MAIVH,EAAAA,EAAMI,aAAaC,SAASC,KAAIC,GACrBA,IACRC,GAEQC,QAAQC,OAAOF,KAI1BR,EAAAA,EAAMI,aAAaO,QAAQL,KAAI,SAAUM,GACrC,OAAOA,CACT,IAAG,SAAUC,GACX,OAAOJ,QAAQC,OAAOG,EAC1B,IAKA,QCrBO,MAAMC,EAAeC,GACjBf,EAAMgB,IAAI,WAAYD,GAOpBE,EAAcF,GAChBf,EAAMgB,IAAI,YAAaD,G,mdCgElC,MAAMG,GAASC,EAAAA,EAAAA,MAETC,GAAOC,EAAAA,EAAAA,IAAI,IACXC,GAAQD,EAAAA,EAAAA,IAAI,CAACE,EAAQ,MAAyBA,EAAQ,QAC5D,IAAIC,GAAKH,EAAAA,EAAAA,KAAI,GACb,MAAMI,EAASA,KACRD,EAAKE,OAEJN,EAAOM,MAAMC,MAAMC,WAAW,uBAC9BR,EAAOM,MAAMC,MAAME,UAAU,qBAE7BT,EAAOM,MAAMC,MAAMC,WAAW,uBAC9BR,EAAOM,MAAMC,MAAME,UAAU,kBAGjCL,EAAKE,OAAOF,EAAKE,KAAK,EAEpBI,GAAUC,EAAAA,EAAAA,IAAS,CACzBC,SAAS,GACTC,SAAS,KAIHC,GAAWH,EAAAA,EAAAA,IAAS,CAC1B,IAAO,WAEDI,GAAaJ,EAAAA,EAAAA,IAAS,CAC5BC,SAAS,GACTC,SAAS,GACTG,gBAAgB,KAGVC,EAAkBA,KACpBF,EAAaF,WAAaE,EAAaC,gBAIvCF,EAASC,EAAaH,UACtBM,OAAOC,MAAM,iBAIjBtB,EAAWa,GAAWU,MAAK,KACvBN,EAASC,EAAaH,UAAYG,EAAaC,gBAE/CE,OAAOC,MAAM,aAAa,IAX1BD,OAAOC,MAAM,UAYf,EAGIE,EAAqBA,KAC3B,MAAMC,EAAMC,OAAOC,KAAKV,GAExBpB,EAAYgB,GAAWU,MAAK,MAEI,UAAvBV,EAAUE,UAA+C,WAAvBF,EAAUG,UAC5CS,EAAIG,SAASf,EAAUE,WAAaF,EAAUG,WAAaC,EAASJ,EAAUE,aAG/EM,OAAOC,MAAM,QACbrB,EAAO4B,KAAK,OAChB,GACF,EAEIC,GAAa1B,EAAAA,EAAAA,IAAI,IACjB2B,GAAgB3B,EAAAA,EAAAA,IAAI,IACpB4B,GAAMlB,EAAAA,EAAAA,IAAS,CACrBC,SAAU,CACV,CAAEkB,UAAU,EAAMC,QAAS,SAAUC,QAAS,QAC9C,CAAEC,IAAK,EAAGC,IAAK,EAAGH,QAAS,cAAeC,QAAS,SAEnDnB,SAAU,CACV,CAAEiB,UAAU,EAAMC,QAAS,QAASC,QAAS,QAC7C,CAAEC,IAAK,EAAGC,IAAK,GAAIH,QAAS,eAAgBC,QAAS,SAErDhB,gBAAiB,CACjB,CAAEc,UAAU,EAAMC,QAAS,QAASC,QAAS,QAC7C,CAAEC,IAAK,EAAGC,IAAK,GAAIH,QAAS,UAAWC,QAAS,W,gmECpJhD,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://vuehome/./src/utils/request.js","webpack://vuehome/./src/api/index.js","webpack://vuehome/./src/components/login-dl.vue","webpack://vuehome/./src/components/login-dl.vue?5c78"],"sourcesContent":["//axiosInstance.js\r\n//导入axios\r\nimport axios from 'axios'\r\nconst API = axios.create({\r\n\tbaseUrl:'http://localhost:8080', //请求后端数据的基本地址，自定义\r\n\ttimeout: 2000                   //请求超时设置，单位ms\r\n})\r\n\r\n// 相应拦截\r\naxios.interceptors.response.use(res => {//拦截响应的方法\r\n    return res;\r\n}, err => {\r\n//响应失败时返回一个 Promise，该 Promise 会被拒绝并传递错误对象。这个错误对象可以在后续的代码中被处理，例如显示错误信息给用户或记录错误日志。 \r\n    return Promise.reject(err);\r\n})\r\n\r\n// 请求拦截\r\naxios.interceptors.request.use(function (config) {\r\n    return config;\r\n  }, function (error) {\r\n    return Promise.reject(error);\r\n});\r\n//这段代码是使用 Axios 库来设置请求拦截器。拦截器是在发送请求之前对请求进行处理的函数。\r\n//在这里，我们定义了一个请求拦截器，它接受一个配置对象作为参数，并返回该对象。\r\n//如果发生错误，它将返回一个被拒绝的 Promise 对象。\r\n//这个拦截器的作用是在请求发送之前对请求进行一些处理，例如添加请求头或修改请求参数等。\r\nexport default API\r\n","import axios from '../utils/request';\r\n\r\n//这段代码定义了一个名为 userLoginIn 的函数，该函数接受一个参数 params。\r\n//函数体内部使用了 axios 库发送了一个 GET 请求，请求的 URL 是 /loginIn，\r\n//并将 params 作为请求参数传递给了服务器。这段代码的作用是实现用户登录功能。\r\nexport const userLoginIn = (params) => {\r\n    return axios.get('/loginIn', params);\r\n}\r\n\r\n//这段代码定义了一个名为userRegist的函数，该函数接受一个参数params。\r\n//函数体内部使用了axios库发送了一个GET请求，请求的URL为/register，\r\n//并将params作为请求参数传递。因此，这段代码的作用是向服务器发送一个注册请求，\r\n//并将请求参数params作为GET请求的参数传递。 \r\nexport const userRegist = (params) => {\r\n    return axios.get('/register', params);\r\n}","<template>\r\n    <!-- 最外层的大盒子 -->\r\n   <div class=\"bigBox\">\r\n        <div class=\"box\">\r\n<!-- 滑动盒子 -->\r\n<div class=\"pre-box\" ref=\"preRef\">\r\n    <h1>WELCOME</h1>\r\n    <p>JOIN US!</p>\r\n    <div class=\"img-box\">\r\n        <img :src=\"flag==true?imgList[1]:imgList[0]\" alt=\"\">\r\n    </div>\r\n</div>\r\n<!-- 注册盒子 -->\r\n<div class=\"register-form\">\r\n    <!-- 标题盒子 -->\r\n    <div class=\"title-box\">\r\n        <h1>注册</h1>\r\n    </div>\r\n    <!-- 输入框盒子 -->\r\n    <!-- <div class=\"input-box\">\r\n        <input type=\"text\" placeholder=\"用户名\"/>\r\n        <input type=\"password\" placeholder=\"密码\"/>\r\n        <input type=\"password\" placeholder=\"确认密码\"/>\r\n        <el-input></el-input>\r\n    </div> -->\r\n    <el-form ref=\"RegisterFormRef\" :model=\"RegisterForm\" :rules=\"rules\" label-width=\"5px\">\r\n        <el-form-item prop=\"username\" label=\" \">\r\n            <el-input type=\"text\" placeholder=\"用户名\" :suffix-icon=\"User\" v-model=\"RegisterForm.username\"/>\r\n        </el-form-item>  \r\n        <el-form-item prop=\"password\" label=\" \">\r\n            <el-input type=\"password\" placeholder=\"密码\" :suffix-icon=\"Lock\" v-model=\"RegisterForm.password\"/>\r\n        </el-form-item>  \r\n        <el-form-item prop=\"confirmPassword\" label=\" \">\r\n            <el-input type=\"password\" placeholder=\"确认密码\" :suffix-icon=\"Lock\" v-model=\"RegisterForm.confirmPassword\"/>\r\n        </el-form-item>  \r\n    </el-form>\r\n    <!-- 按钮盒子 -->\r\n    <div class=\"btn-box\">\r\n        <button @click=\"handleClickUser\">注册</button>\r\n        <!-- 绑定点击事件 -->\r\n        <p @click=\"mySwitch\">已有账号?去登录</p>\r\n    </div>\r\n</div>\r\n<!-- 登录盒子 -->\r\n<div class=\"login-form\">\r\n    <!-- 标题盒子 -->\r\n    <div class=\"title-box\">\r\n        <h1>登录</h1>\r\n    </div>\r\n    <!-- 输入框盒子 -->\r\n    <!-- <div class=\"input-box\">\r\n        <input type=\"text\" placeholder=\"用户名\"/>\r\n        <input type=\"password\" placeholder=\"密码\"/>\r\n    </div>                -->\r\n    <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"rules\" label-width=\"5px\">\r\n        <el-form-item prop=\"username\" label=\" \">\r\n            <el-input type=\"text\" placeholder=\"用户名\" :suffix-icon=\"User\" v-model=\"loginForm.username\"/>\r\n        </el-form-item>  \r\n        <el-form-item prop=\"password\" label=\" \">\r\n            <el-input type=\"password\" placeholder=\"密码\" :suffix-icon=\"Lock\" v-model=\"loginForm.password\"/>\r\n        </el-form-item>    \r\n    </el-form>\r\n    <!-- 按钮盒子 -->\r\n    <div class=\"btn-box\">\r\n        <button @click=\"handleClickLoginIn\">登录</button>\r\n        <!-- 绑定点击事件 -->\r\n        <p @click=\"mySwitch\">没有账号?去注册</p>\r\n    </div>\r\n</div>\r\n</div>\r\n   </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {reactive,ref} from 'vue'\r\nimport {userLoginIn, userRegist} from '../api';\r\nimport{Lock,User} from '@element-plus/icons-vue'\r\nimport { useRouter } from 'vue-router'\r\nconst router = useRouter()\r\n\r\nconst preRef=ref('')\r\nconst imgList=ref([require('@/assets/img/wuwu.jpg'),require('@/assets/img/waoku.jpg')])\r\nlet flag=ref(true)\r\nconst mySwitch=()=>{\r\n    if(flag.value)\r\n    {\r\n        preRef.value.style.background='#rgb(73,124,187,0.5)'\r\n        preRef.value.style.transform='translateX(100%)'\r\n    }else{\r\n        preRef.value.style.background='#rgb(73,124,187,0.5)'\r\n        preRef.value.style.transform='translateX(0%)'\r\n        // img.src=require(\"@/assets/img/waoku.jpg\")\r\n    }\r\n    flag.value=!flag.value\r\n}\r\nconst loginForm=reactive({\r\nusername:'',\r\npassword:''\r\n});\r\n// 用于暂存注册数据对象\r\n// 对象的key不能重复 -》 一个用户的用户名不可以重复\r\nconst userInfo = reactive({\r\n'123': '123456'\r\n});\r\nconst RegisterForm=reactive({\r\nusername:'',\r\npassword:'',\r\nconfirmPassword:''\r\n});\r\n// 点击注册\r\nconst handleClickUser = () => {\r\nif (RegisterForm.password !== RegisterForm.confirmPassword) {\r\n    window.alert('两次密码不相同');\r\n    return;\r\n}\r\nif (userInfo[RegisterForm.username]) {\r\n    window.alert('用户名与已注册的用户名相同');\r\n    return;\r\n}\r\n// 请求注册\r\nuserRegist(loginForm).then(() => {\r\n    userInfo[RegisterForm.username] = RegisterForm.confirmPassword;\r\n    // 注册成功后续\r\n    window.alert('注册成功，可以登录了');\r\n});\r\n};\r\n// 点击登录\r\nconst handleClickLoginIn = () => {\r\nconst key = Object.keys(userInfo); // []\r\n// 请求登录\r\nuserLoginIn(loginForm).then(() => {\r\n    if (\r\n        (loginForm.username === 'admin' && loginForm.password === '123456') ||\r\n        (key.includes(loginForm.username) && loginForm.password === userInfo[loginForm.username])\r\n    ) {\r\n        // 登录后续操作\r\n        window.alert('登陆成功');\r\n        router.push('/ms')\r\n    }\r\n});\r\n};\r\nconst loginFormRef=ref('')\r\nconst RegisterFormRef=ref('')\r\nconst rules=reactive({\r\nusername: [\r\n{ required: true, message: '请输入用户名', trigger: 'blur' },\r\n{ min: 3, max: 5, message: '长度在3-5个字符之间', trigger: 'blur' },\r\n],\r\npassword: [\r\n{ required: true, message: '请输入密码', trigger: 'blur' },\r\n{ min: 6, max: 12, message: '长度在6-12个字符之间', trigger: 'blur' },\r\n],\r\nconfirmPassword: [\r\n{ required: true, message: '请确认密码', trigger: 'blur' },\r\n{ min: 6, max: 12, message: '请再次输入密码', trigger: 'blur' },\r\n],\r\n})\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 去除input的轮廓 */\r\ninput {\r\noutline: none;\r\n}\r\n\r\n.bigBox {\r\n/* 溢出隐藏 */\r\nheight: 100vh;\r\noverflow-x: hidden;\r\ndisplay: flex;\r\n/* 渐变方向从左到右 */\r\nbackground: linear-gradient(to right, #e0e25f, rgb(87, 208, 118));\r\nbackground-image: url('../assets/img/background2.jpg');\r\nbackground-size: cover;\r\nbackground-position: center;\r\n}\r\n\r\n/* span {\r\nposition: absolute;\r\nz-index: 0;\r\nbottom: 0;\r\nborder-radius: 50%;\r\n/* 径向渐变 */\r\n/* background: radial-gradient(circle at 72% 28%, #fff 3px, #ff7edf 8%, #5b5b5b, #aad7f9 100%); */\r\n/* 泡泡内阴影 */\r\n/* box-shadow: inset 0 0 6px #fff,\r\ninset 3px 0 6px #eaf5fc,\r\ninset 2px -2px 10px #efcde6,\r\ninset 0 0 60px #f9f6de,\r\n0 0 20px #fff; */\r\n/* 动画 */\r\n/* animation: myMove 4s linear infinite;\r\n} */ \r\n\r\n\r\n/* @keyframes myMove {\r\n0% {\r\ntransform: translateY(0%);\r\nopacity: 1;\r\n}\r\n\r\n50% {\r\ntransform: translate(10%, -1000%);\r\n}\r\n\r\n75% {\r\ntransform: translate(-20%, -1200%);\r\n}\r\n\r\n99% {\r\nopacity: .9;\r\n}\r\n\r\n100% {\r\ntransform: translateY(-1800%) scale(1.5);\r\nopacity: 0;\r\n}\r\n} */\r\n\r\n/* 最外层的大盒子 */\r\n.box {\r\nwidth: 1050px;\r\nheight: 600px;\r\ndisplay: flex;\r\n/* 相对定位 */\r\nposition: relative;\r\nz-index: 2;\r\nmargin: auto;\r\n/* 设置圆角 */\r\nborder-radius: 8px;\r\n/* 设置边框 */\r\nborder: 0px solid rgba(255, 255, 255, 0);\r\n/* 设置盒子阴影 */\r\nbox-shadow: 2px 1px 19px rgba(0, 0, 0, .1);\r\n}\r\n\r\n/* 滑动的盒子 */\r\n.pre-box {\r\n/* 宽度为大盒子的一半 */\r\nwidth: 50%;\r\n/* width: var(--width); */\r\nheight: 100%;\r\n/* 绝对定位 */\r\nposition: absolute;\r\n/* 距离大盒子左侧为0 */\r\nleft: 0;\r\n/* 距离大盒子顶部为0 */\r\ntop: 0;\r\nz-index: 99;\r\nborder-radius: 4px;\r\nbackground-color: rgba(255, 255, 255, 0.5);\r\nbox-shadow: 2px 1px 19px rgba(142, 124, 35, 0.263);\r\n/* 动画过渡，先加速再减速 */\r\ntransition: 0.5s ease-in-out;\r\n}\r\n\r\n/* 滑动盒子的标题 */\r\n.pre-box h1 {\r\nmargin-top: 150px;\r\ntext-align: center;\r\n/* 文字间距 */\r\nletter-spacing: 5px;\r\ncolor: white;\r\n/* 禁止选中 */\r\nuser-select: none;\r\n/* 文字阴影 */\r\ntext-shadow: 4px 4px 3px rgba(0, 0, 0, .1);\r\nfont-family: 华文行楷, sans-serif;\r\nfont-size: 80px;\r\n}\r\n\r\n/* 滑动盒子的文字 */\r\n.pre-box p {\r\nheight: 30px;\r\nline-height: 30px;\r\ntext-align: center;\r\nmargin: 20px 0;\r\n/* 禁止选中 */\r\nuser-select: none;\r\nfont-weight: bold;\r\ncolor: white;\r\ntext-shadow: 4px 4px 3px rgba(0, 0, 0, .1);\r\n}\r\n\r\n/* 图片盒子 */\r\n.img-box {\r\nwidth: 250px;\r\nheight: 250px;\r\nmargin: 20px auto;\r\n/* 设置为圆形 */\r\nborder-radius: 50%;\r\n/* 设置用户禁止选中 */\r\nuser-select: none;\r\noverflow: hidden;\r\nbox-shadow: 4px 4px 3px rgba(0, 0, 0, .1);\r\n}\r\n\r\n/* 图片 */\r\n.img-box img {\r\nwidth: 100%;\r\ntransition: 0.5s;\r\n}\r\n\r\n/*这段代码定义了两个 CSS 类 .login-form 和 .register-form，\r\n它们都具有 flex: 1 和 height: 100% 的属性。\r\n这意味着这两个类的元素将会占据其父元素的全部高度，\r\n并且它们的宽度将会根据它们的父元素的宽度进行自适应调整。\r\n这段代码可能是用于创建一个登录和注册表单的盒子，这些表单将会占据整个屏幕高度。 */\r\n/* 登录和注册盒子 */\r\n.login-form,\r\n.register-form {\r\nflex: 1;\r\nheight: 100%;\r\n}\r\n\r\n/* 标题盒子 */\r\n.title-box {\r\nheight: 300px;\r\nline-height: 500px;\r\n\r\n}\r\n\r\n/* 标题 */\r\n.title-box h1 {\r\ntext-align: center;\r\ncolor: white;\r\n/* 禁止选中 */\r\nuser-select: none;\r\nletter-spacing: 5px;\r\ntext-shadow: 4px 4px 3px rgba(0, 0, 0, .1);\r\nfont-family: 华文行楷;\r\nfont-size: 40px;\r\nfont-weight: 300;\r\n}\r\n\r\n/* 输入框盒子 */\r\n.el-form{\r\ndisplay: flex;\r\n/* 纵向布局 */\r\nflex-direction: column;\r\n/* 水平居中 */\r\nalign-items: center;\r\n}\r\n.el-form-item{\r\nwidth: 65%;\r\n}\r\n/* 输入框 */\r\ninput {\r\n/* width: 60%; */\r\nheight: 40px;\r\nmargin-bottom: 20px;\r\ntext-indent: 10px;\r\nborder: 1px solid #fff;\r\nbackground-color: rgba(255, 255, 255, 0.3);\r\nborder-radius: 120px;\r\n/* 增加磨砂质感 */\r\nbackdrop-filter: blur(10px);\r\n}\r\n\r\ninput:focus {\r\n/* 光标颜色 */\r\ncolor: #b0cfe9;\r\n\r\n}\r\n\r\n/* 聚焦时隐藏文字 */\r\ninput:focus::placeholder {\r\nopacity: 0;\r\n}\r\n\r\n/* 按钮盒子 */\r\n.btn-box {\r\ndisplay: flex;\r\njustify-content: center;\r\n}\r\n\r\n/* 按钮 */\r\nbutton {\r\nwidth: 100px;\r\nheight: 30px;\r\nmargin: 0 7px;\r\nline-height: 30px;\r\nborder: none;\r\nborder-radius: 4px;\r\nbackground-color: #69b3f0;\r\ncolor: white;\r\n}\r\n\r\n/* 按钮悬停时 */\r\nbutton:hover {\r\n/* 鼠标小手 */\r\ncursor: pointer;\r\n/* 透明度 */\r\nopacity: .8;\r\n}\r\n\r\n/* 按钮文字 */\r\n.btn-box p {\r\nheight: 30px;\r\nline-height: 30px;\r\n/* 禁止选中 */\r\nuser-select: none;\r\nfont-size: 14px;\r\ncolor: white;\r\n\r\n}\r\n\r\n.btn-box p:hover {\r\ncursor: pointer;\r\nborder-bottom: 1px solid white;\r\n}\r\n</style>","import script from \"./login-dl.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./login-dl.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./login-dl.vue?vue&type=style&index=0&id=286183f4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-286183f4\"]])\n\nexport default __exports__"],"names":["API","axios","create","baseUrl","timeout","interceptors","response","use","res","err","Promise","reject","request","config","error","userLoginIn","params","get","userRegist","router","useRouter","preRef","ref","imgList","require","flag","mySwitch","value","style","background","transform","loginForm","reactive","username","password","userInfo","RegisterForm","confirmPassword","handleClickUser","window","alert","then","handleClickLoginIn","key","Object","keys","includes","push","loginFormRef","RegisterFormRef","rules","required","message","trigger","min","max","__exports__"],"sourceRoot":""}